[2022-02-18 21:01:58,490] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2a18f23c, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-18 21:07:02,417] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-18 21:07:02,461] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-02-18 21:07:02,466] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-02-18 21:07:02,571] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-18 21:07:02,580] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-18 21:07:02,586] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-18 21:07:02,591] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-18 21:07:02,638] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-02-18 21:07:02,663] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:07:02,691] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-18 21:07:02,727] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:07:02,727] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-18 21:07:02,728] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-18 21:07:02,728] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-18 21:07:02,737] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-18 21:07:02,738] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,738] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,738] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-18 21:07:02,739] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-18 21:07:02,739] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-18 21:07:02,826] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:07:02,827] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:07:02,843] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:07:02,843] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:07:02,843] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:07:02,844] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:07:02,855] INFO [RequestSendThread controllerId=0] Controller 0 connected to panida-VirtualBox:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-18 21:07:02,863] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:07:02,881] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-02-18 21:07:02,896] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,896] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,896] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,896] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-18 21:07:02,897] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-18 21:07:02,930] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-18 21:07:07,932] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:07:07,932] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:12:07,934] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:12:07,934] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:12:25,938] INFO [Controller id=0] New topics: [Set(cities)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(cities,Some(tzFxVSjRR82VUfsMQPiP6A),Map(cities-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-18 21:12:25,938] INFO [Controller id=0] New partition creation callback for cities-0 (kafka.controller.KafkaController)
[2022-02-18 21:19:04,513] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2a18f23c, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-18 21:26:23,816] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2a18f23c, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-18 21:27:38,704] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-18 21:27:38,752] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-02-18 21:27:38,762] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-18 21:27:38,797] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-18 21:27:38,817] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-18 21:27:38,826] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-18 21:27:38,897] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 68) (kafka.controller.KafkaController)
[2022-02-18 21:27:38,987] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:27:39,023] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-18 21:27:39,074] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:27:39,075] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-18 21:27:39,075] INFO [Controller id=0] Current list of topics in the cluster: Set(cities) (kafka.controller.KafkaController)
[2022-02-18 21:27:39,075] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-18 21:27:39,090] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-18 21:27:39,106] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,106] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,106] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-18 21:27:39,107] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-18 21:27:39,107] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-18 21:27:39,187] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:27:39,189] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:27:39,192] INFO [RequestSendThread controllerId=0] Controller 0 connected to panida-VirtualBox:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-18 21:27:39,275] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:27:39,276] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=cities,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:27:39,283] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:27:39,292] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:27:39,303] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(cities-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:27:39,304] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-02-18 21:27:39,326] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,326] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,327] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,327] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-18 21:27:39,348] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-18 21:27:39,404] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-18 21:27:44,406] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:27:44,406] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:27:44,408] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-18 21:27:44,411] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-18 21:32:44,411] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:32:44,412] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:32:44,412] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-18 21:32:44,412] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-18 21:36:08,413] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(26AWCvVhRW6zDwfBlfHoCQ),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-18 21:36:08,415] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-02-18 21:37:44,414] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:37:44,416] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:37:44,417] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-18 21:37:44,418] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-18 21:42:46,575] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:42:46,638] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:42:46,730] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-18 21:42:46,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-18 21:45:45,492] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2a18f23c, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-18 21:47:05,102] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-18 21:47:05,139] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-02-18 21:47:05,156] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-02-18 21:47:05,328] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-18 21:47:05,339] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-18 21:47:05,344] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-18 21:47:05,371] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-18 21:47:05,454] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-02-18 21:47:05,466] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:47:05,494] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-18 21:47:05,568] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-18 21:47:05,568] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-18 21:47:05,568] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-18 21:47:05,568] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-18 21:47:05,589] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-18 21:47:05,597] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,597] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,597] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-18 21:47:05,598] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-18 21:47:05,598] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-18 21:47:05,664] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:47:05,664] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:47:05,681] INFO [RequestSendThread controllerId=0] Controller 0 connected to panida-VirtualBox:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-18 21:47:05,695] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:47:05,704] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-02-18 21:47:05,704] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:47:05,707] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:47:05,710] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-02-18 21:47:05,710] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-02-18 21:47:05,745] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,745] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,745] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,745] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-18 21:47:05,758] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-18 21:47:05,799] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-18 21:47:10,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:47:10,830] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:47:59,102] INFO [Controller id=0] New topics: [Set(cities)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(cities,Some(KvarOoe8TRyvWPOSddfJeA),Map(cities-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-18 21:47:59,103] INFO [Controller id=0] New partition creation callback for cities-0 (kafka.controller.KafkaController)
[2022-02-18 21:51:46,090] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(6TspFcN3SkubA67UqZwGsw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-18 21:51:46,091] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-02-18 21:52:10,834] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-18 21:52:10,834] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-18 21:52:10,837] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-18 21:52:10,838] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
